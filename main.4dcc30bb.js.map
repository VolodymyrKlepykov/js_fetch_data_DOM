{"version":3,"sources":["scripts/main.js"],"names":["url","dataPhones","dataPhonesWithDetails","phoneString","jsonFormat","phonesBlock","document","createElement","getPhonesDetails","phones","forEach","phone","phoneList","textContent","name","appendChild","dataPromises","map","id","idList","fetch","Promise","all","body","getPhones","resolve","reject","then","response","ok","json","Error","status","value","catch","error","createMessage","innerHTML","setTimeout","elem","push","responses","r","detailsList","el","Object","assign","details","find","a"],"mappings":"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","file":"main.4dcc30bb.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst url\n  = 'https://mate-academy.github.io/phone-catalogue-static/api';\n\nconst dataPhones = [];\nconst dataPhonesWithDetails = [];\n\nconst phoneString = '/phones';\nconst jsonFormat = '.json';\nconst phonesBlock = document.createElement('ul');\n\ndocument.body.appendChild(phonesBlock);\n\nfunction getPhonesDetails(phones) {\n  phones.forEach((phone) => {\n    const phoneList = document.createElement('li');\n\n    phoneList.textContent = phone.name;\n    phonesBlock.appendChild(phoneList);\n  });\n\n  const dataPromises = phones\n    .map((phone) => phone.id)\n    .map((idList) => {\n      return fetch(phoneString + '/' + idList + jsonFormat);\n    });\n\n  return Promise.all(dataPromises);\n}\n\nconst getPhones = () => {\n  return new Promise((resolve, reject) => {\n    fetch(url + phoneString + jsonFormat)\n      .then((response) => {\n        if (!response.ok) {\n          return Promise.reject(\n            new Error(`${response.status}`)\n          );\n        }\n\n        return response.json();\n      })\n      .then((value) => resolve(value))\n      .catch((error) => {\n        const createMessage = document.createElement('div');\n\n        createMessage.innerHTML = error;\n\n        document.body.appendChild(createMessage);\n      });\n\n    setTimeout(() => reject(new Error()), 5000);\n  });\n};\n\ngetPhones()\n  .then((value) => {\n    value.forEach((elem) => dataPhones.push({ ...elem }));\n\n    return value;\n  })\n  .then(getPhonesDetails)\n  .then((responses) => Promise.all(responses.map((r) => r.json())))\n  .then((detailsList) => {\n    return dataPhones.map((el) => {\n      return Object.assign(el, {\n        details: detailsList.find((a) => a.id === el.id),\n      });\n    });\n  })\n  .then((value) => dataPhonesWithDetails.push(...value))\n  .catch((value) => new Error());\n"]}